shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rAmCharts")
?rAmCharts::add_animate_dependency()
install.packages("rtweet")
library(rtweet)
rt <- search_tweets(
"#rstats", n = 18000, include_rts = FALSE
)
rt <- search_tweets(
"#rstats", n = 180, include_rts = FALSE
)
rt
rt$text
rt <- search_tweets(
"#spydermannowayhome", n = 180, include_rts = FALSE
)
rt <- search_tweets(
"#spydermannowayhome", n = 180, include_rts = FALSE
)
rt <- search_tweets(
"#Spyderman", n = 180, include_rts = FALSE
)
rt
rt
View(rt)
rt <- search_tweets(
"#jorge", n = 180, include_rts = FALSE
)
rt
rt <- search_tweets(
"lang:en", geocode = lookup_coords("usa"), n = 100
)
rt
install.packages("Rfacebook")
library(Rfacebook)
install.packages("sever")
library(shiny)
library(sever)
ui <- fluidPage(
useSever(), # import dependencies
h1("sever")
)
server <- function(input, output){
sever() # customise
}
shinyApp(ui, server)
img <- paste0(
"https://images.pexels.com/photos/4827/",
"nature-forest-trees-fog.jpeg?auto=compress",
"&cs=tinysrgb&dpr=2&h=750&w=1260"
)
ui <- fluidPage(
useSever(),
h1("sever")
)
server <- function(input, output){
sever(bg_image = img, color = "black")
}
shinyApp(ui, server)
img <- paste0(
"https://images.pexels.com/photos/4827/",
"nature-forest-trees-fog.jpeg?auto=compress",
"&cs=tinysrgb&dpr=2&h=750&w=1260"
)
disconnected <- tagList(
h1("Whoah there..."),
p("Something went terribly wrong!"),
reload_button("REFRESH", class = "warning")
)
ui <- fluidPage(
useSever(),
h1("sever")
)
server <- function(input, output){
sever(html = disconnected,bg_image = img, bg_color = "#000")
}
shinyApp(ui, server)
img <- paste0(
"https://cdn.pixabay.com/photo/2020/06/13/17/55/palace-5295177_1280.jpg"
)
disconnected <- tagList(
h1("Whoah there..."),
p("Something went terribly wrong!"),
reload_button("REFRESH", class = "warning")
)
ui <- fluidPage(
useSever(),
h1("sever")
)
server <- function(input, output){
sever(html = disconnected,bg_image = img, bg_color = "#000")
}
shinyApp(ui, server)
img <- paste0(
"https://cdn.pixabay.com/photo/2019/11/09/23/48/palace-of-fine-arts-4614673_1280.jpg"
)
disconnected <- tagList(
h1("Whoah there..."),
p("Something went terribly wrong!"),
reload_button("REFRESH", class = "warning")
)
ui <- fluidPage(
useSever(),
h1("sever")
)
server <- function(input, output){
sever(html = disconnected,bg_image = img, bg_color = "#000")
}
shinyApp(ui, server)
img <- paste0(
"https://cdn.pixabay.com/photo/2019/11/09/23/48/palace-of-fine-arts-4614673_1280.jpg"
)
disconnected <- tagList(
h1("Desconectado del servidor"),
p("Estuviste inactivo más de 5 minutos..."),
reload_button("Recargar", class = "warning")
)
ui <- fluidPage(
useSever(),
h1("sever")
)
server <- function(input, output){
sever(html = disconnected,bg_image = img, bg_color = "#000")
}
shinyApp(ui, server)
remotes::install_github("RinteRface/shinyComponent")
library(shinyComponent)
## basic example code
run_app()
shinydashboardPlus::shinydashboardPlusGallery()
sample(c("amenaza en lo profundo", "señales"), 1)
runApp()
runApp()
runApp()
runApp()
runApp()
?e_histogram(boundaryGap=c('10%', '10%'))
mtcars |>
e_charts() |>
e_histogram(mpg, name = "histogram", boundaryGap=c('10%', '10%')) |>
e_density(mpg, areaStyle = list(opacity = .4), smooth = TRUE, name = "density", y_index = 1) |>
e_tooltip(trigger = "axis")
mtcars |>
e_charts() |>
e_histogram(mpg, name = "histogram", boundaryGap=c('10%', '10%')) |>
#e_density(mpg, areaStyle = list(opacity = .4), smooth = TRUE, name = "density", y_index = 1) |>
e_tooltip(trigger = "axis")
mtcars |>
e_charts() |>
e_histogram(mpg, name = "histogram") |>
#e_density(mpg, areaStyle = list(opacity = .4), smooth = TRUE, name = "density", y_index = 1) |>
e_tooltip(trigger = "axis")
mtcars |>
e_charts() |>
e_histogram(mpg, name = "histogram", boundaryGap=c('5%', '5%')) |>
#e_density(mpg, areaStyle = list(opacity = .4), smooth = TRUE, name = "density", y_index = 1) |>
e_tooltip(trigger = "axis")
mtcars |>
e_charts() |>
e_histogram(mpg, name = "histogram", scale=FALSE) |>
#e_density(mpg, areaStyle = list(opacity = .4), smooth = TRUE, name = "density", y_index = 1) |>
e_tooltip(trigger = "axis")
mtcars |>
e_charts() |>
e_histogram(mpg, name = "histogram", scale=TRUE) |>
#e_density(mpg, areaStyle = list(opacity = .4), smooth = TRUE, name = "density", y_index = 1) |>
e_tooltip(trigger = "axis")
runApp()
runApp()
runApp()
runApp()
runApp()
View(data_suelo)
### datos costo suelo
data_suelo <- read.csv("datos/data_suelo.csv")
View(data_suelo)
### datos costo suelo
data_suelo <- fread("datos/data_suelo.csv")
View(data_suelo)
data_suelo <- fread("datos/data_suelo.csv")
data_suelo <- data_suelo |>
select(Delegacion, total, Ingresos)
data_suelo$total <- as.numeric(data_suelo$total)
data_suelo$Ingresos <- as.numeric(data_suelo$Ingresos)
data_suelo <- data_suelo |>
mutate(Ingresos_mill = Ingresos/1000000)
View(data_suelo)
data_suelo <- read.csv("datos/data_suelo.csv")
data_suelo <- data_suelo |>
select(Delegacion, total, Ingresos)
data_suelo$total <- as.numeric(data_suelo$total)
data_suelo$Ingresos <- as.numeric(data_suelo$Ingresos)
data_suelo <- data_suelo |>
mutate(Ingresos_mill = Ingresos/1000000)
View(data_suelo)
runApp()
runApp()
10194+12600+8000
# Cargando los datos
datos <- data.table::fread("datos/3516a236-cc06-4c2f-8752-2ef9343dd2e0")
zip(datos)
zip(datos, files = "datos.zip")
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
